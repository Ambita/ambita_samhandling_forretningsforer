/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Kontakt } from './Kontakt';
import {
    KontaktFromJSON,
    KontaktFromJSONTyped,
    KontaktToJSON,
    KontaktToJSONTyped,
} from './Kontakt';
import type { StyregodkjenningFullfort } from './StyregodkjenningFullfort';
import {
    StyregodkjenningFullfortFromJSON,
    StyregodkjenningFullfortFromJSONTyped,
    StyregodkjenningFullfortToJSON,
    StyregodkjenningFullfortToJSONTyped,
} from './StyregodkjenningFullfort';
import type { BasicResponseForretningsforer } from './BasicResponseForretningsforer';
import {
    BasicResponseForretningsforerFromJSON,
    BasicResponseForretningsforerFromJSONTyped,
    BasicResponseForretningsforerToJSON,
    BasicResponseForretningsforerToJSONTyped,
} from './BasicResponseForretningsforer';
import type { Klient } from './Klient';
import {
    KlientFromJSON,
    KlientFromJSONTyped,
    KlientToJSON,
    KlientToJSONTyped,
} from './Klient';
import type { SalgsmeldingForkjopsrettFullfort } from './SalgsmeldingForkjopsrettFullfort';
import {
    SalgsmeldingForkjopsrettFullfortFromJSON,
    SalgsmeldingForkjopsrettFullfortFromJSONTyped,
    SalgsmeldingForkjopsrettFullfortToJSON,
    SalgsmeldingForkjopsrettFullfortToJSONTyped,
} from './SalgsmeldingForkjopsrettFullfort';

/**
 * SalgsmeldingFullfort
 * required - expected at the end of the process - marks sale process completed
 * @export
 * @interface SalgsmeldingFullfort
 */
export interface SalgsmeldingFullfort {
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    type: SalgsmeldingFullfortTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    ordreMottatt: string;
    /**
     * 
     * @type {boolean}
     * @memberof SalgsmeldingFullfort
     */
    harForkjopsrett: boolean;
    /**
     * 
     * @type {SalgsmeldingForkjopsrettFullfort}
     * @memberof SalgsmeldingFullfort
     */
    forkjopsrett?: SalgsmeldingForkjopsrettFullfort;
    /**
     * 
     * @type {boolean}
     * @memberof SalgsmeldingFullfort
     */
    styregodkjenningPakrevd: boolean;
    /**
     * 
     * @type {StyregodkjenningFullfort}
     * @memberof SalgsmeldingFullfort
     */
    styregodkjenning?: StyregodkjenningFullfort;
    /**
     * 
     * @type {Array<Kontakt>}
     * @memberof SalgsmeldingFullfort
     */
    kjopere: Array<Kontakt>;
    /**
     * 
     * @type {boolean}
     * @memberof SalgsmeldingFullfort
     */
    tilknyttetLag: boolean;
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    ordreId: string;
    /**
     * 
     * @type {BasicResponseForretningsforer}
     * @memberof SalgsmeldingFullfort
     */
    forretningsforer: BasicResponseForretningsforer;
    /**
     * 
     * @type {Klient}
     * @memberof SalgsmeldingFullfort
     */
    klient?: Klient;
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    levert?: string;
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    referanse?: string;
    /**
     * 
     * @type {string}
     * @memberof SalgsmeldingFullfort
     */
    eierform?: SalgsmeldingFullfortEierformEnum;
}


/**
 * @export
 */
export const SalgsmeldingFullfortTypeEnum = {
    Salgsmeldingfullfort: 'salgsmeldingfullfort'
} as const;
export type SalgsmeldingFullfortTypeEnum = typeof SalgsmeldingFullfortTypeEnum[keyof typeof SalgsmeldingFullfortTypeEnum];

/**
 * @export
 */
export const SalgsmeldingFullfortEierformEnum = {
    Aksjonr: 'Aksjon√•r',
    Andelseier: 'Andelseier',
    Sameier: 'Sameier',
    Seksjonseier: 'Seksjonseier'
} as const;
export type SalgsmeldingFullfortEierformEnum = typeof SalgsmeldingFullfortEierformEnum[keyof typeof SalgsmeldingFullfortEierformEnum];


/**
 * Check if a given object implements the SalgsmeldingFullfort interface.
 */
export function instanceOfSalgsmeldingFullfort(value: object): value is SalgsmeldingFullfort {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('ordreMottatt' in value) || value['ordreMottatt'] === undefined) return false;
    if (!('harForkjopsrett' in value) || value['harForkjopsrett'] === undefined) return false;
    if (!('styregodkjenningPakrevd' in value) || value['styregodkjenningPakrevd'] === undefined) return false;
    if (!('kjopere' in value) || value['kjopere'] === undefined) return false;
    if (!('tilknyttetLag' in value) || value['tilknyttetLag'] === undefined) return false;
    if (!('ordreId' in value) || value['ordreId'] === undefined) return false;
    if (!('forretningsforer' in value) || value['forretningsforer'] === undefined) return false;
    return true;
}

export function SalgsmeldingFullfortFromJSON(json: any): SalgsmeldingFullfort {
    return SalgsmeldingFullfortFromJSONTyped(json, false);
}

export function SalgsmeldingFullfortFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalgsmeldingFullfort {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'ordreMottatt': json['ordreMottatt'],
        'harForkjopsrett': json['harForkjopsrett'],
        'forkjopsrett': json['forkjopsrett'] == null ? undefined : SalgsmeldingForkjopsrettFullfortFromJSON(json['forkjopsrett']),
        'styregodkjenningPakrevd': json['styregodkjenningPakrevd'],
        'styregodkjenning': json['styregodkjenning'] == null ? undefined : StyregodkjenningFullfortFromJSON(json['styregodkjenning']),
        'kjopere': ((json['kjopere'] as Array<any>).map(KontaktFromJSON)),
        'tilknyttetLag': json['tilknyttetLag'],
        'ordreId': json['ordreId'],
        'forretningsforer': BasicResponseForretningsforerFromJSON(json['forretningsforer']),
        'klient': json['klient'] == null ? undefined : KlientFromJSON(json['klient']),
        'levert': json['levert'] == null ? undefined : json['levert'],
        'referanse': json['referanse'] == null ? undefined : json['referanse'],
        'eierform': json['eierform'] == null ? undefined : json['eierform'],
    };
}

export function SalgsmeldingFullfortToJSON(json: any): SalgsmeldingFullfort {
    return SalgsmeldingFullfortToJSONTyped(json, false);
}

export function SalgsmeldingFullfortToJSONTyped(value?: SalgsmeldingFullfort | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'ordreMottatt': value['ordreMottatt'],
        'harForkjopsrett': value['harForkjopsrett'],
        'forkjopsrett': SalgsmeldingForkjopsrettFullfortToJSON(value['forkjopsrett']),
        'styregodkjenningPakrevd': value['styregodkjenningPakrevd'],
        'styregodkjenning': StyregodkjenningFullfortToJSON(value['styregodkjenning']),
        'kjopere': ((value['kjopere'] as Array<any>).map(KontaktToJSON)),
        'tilknyttetLag': value['tilknyttetLag'],
        'ordreId': value['ordreId'],
        'forretningsforer': BasicResponseForretningsforerToJSON(value['forretningsforer']),
        'klient': KlientToJSON(value['klient']),
        'levert': value['levert'],
        'referanse': value['referanse'],
        'eierform': value['eierform'],
    };
}

