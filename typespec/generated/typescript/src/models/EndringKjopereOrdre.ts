/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Kontakt } from './Kontakt';
import {
    KontaktFromJSON,
    KontaktFromJSONTyped,
    KontaktToJSON,
    KontaktToJSONTyped,
} from './Kontakt';
import type { Kontaktinfo } from './Kontaktinfo';
import {
    KontaktinfoFromJSON,
    KontaktinfoFromJSONTyped,
    KontaktinfoToJSON,
    KontaktinfoToJSONTyped,
} from './Kontaktinfo';
import type { Registerenhet } from './Registerenhet';
import {
    RegisterenhetFromJSON,
    RegisterenhetFromJSONTyped,
    RegisterenhetToJSON,
    RegisterenhetToJSONTyped,
} from './Registerenhet';
import type { Meglerkontor } from './Meglerkontor';
import {
    MeglerkontorFromJSON,
    MeglerkontorFromJSONTyped,
    MeglerkontorToJSON,
    MeglerkontorToJSONTyped,
} from './Meglerkontor';

/**
 * EndringKjopere
 * Notify about change of buyers/owners
 * @export
 * @interface EndringKjopereOrdre
 */
export interface EndringKjopereOrdre {
    /**
     * 
     * @type {string}
     * @memberof EndringKjopereOrdre
     */
    type: EndringKjopereOrdreTypeEnum;
    /**
     * 
     * @type {Array<Kontakt>}
     * @memberof EndringKjopereOrdre
     */
    kjopere: Array<Kontakt>;
    /**
     * 
     * @type {string}
     * @memberof EndringKjopereOrdre
     */
    ordreId: string;
    /**
     * 
     * @type {string}
     * @memberof EndringKjopereOrdre
     */
    estateId?: string;
    /**
     * 
     * @type {string}
     * @memberof EndringKjopereOrdre
     */
    oppdragsnummer?: string;
    /**
     * 
     * @type {Registerenhet}
     * @memberof EndringKjopereOrdre
     */
    registerenhet: Registerenhet;
    /**
     * 
     * @type {Kontaktinfo}
     * @memberof EndringKjopereOrdre
     */
    bestiller: Kontaktinfo;
    /**
     * 
     * @type {Meglerkontor}
     * @memberof EndringKjopereOrdre
     */
    meglerkontor: Meglerkontor;
    /**
     * 
     * @type {Kontaktinfo}
     * @memberof EndringKjopereOrdre
     */
    kontaktperson: Kontaktinfo;
}


/**
 * @export
 */
export const EndringKjopereOrdreTypeEnum = {
    Endringkjopere: 'endringkjopere'
} as const;
export type EndringKjopereOrdreTypeEnum = typeof EndringKjopereOrdreTypeEnum[keyof typeof EndringKjopereOrdreTypeEnum];


/**
 * Check if a given object implements the EndringKjopereOrdre interface.
 */
export function instanceOfEndringKjopereOrdre(value: object): value is EndringKjopereOrdre {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('kjopere' in value) || value['kjopere'] === undefined) return false;
    if (!('ordreId' in value) || value['ordreId'] === undefined) return false;
    if (!('registerenhet' in value) || value['registerenhet'] === undefined) return false;
    if (!('bestiller' in value) || value['bestiller'] === undefined) return false;
    if (!('meglerkontor' in value) || value['meglerkontor'] === undefined) return false;
    if (!('kontaktperson' in value) || value['kontaktperson'] === undefined) return false;
    return true;
}

export function EndringKjopereOrdreFromJSON(json: any): EndringKjopereOrdre {
    return EndringKjopereOrdreFromJSONTyped(json, false);
}

export function EndringKjopereOrdreFromJSONTyped(json: any, ignoreDiscriminator: boolean): EndringKjopereOrdre {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'kjopere': ((json['kjopere'] as Array<any>).map(KontaktFromJSON)),
        'ordreId': json['ordreId'],
        'estateId': json['estateId'] == null ? undefined : json['estateId'],
        'oppdragsnummer': json['oppdragsnummer'] == null ? undefined : json['oppdragsnummer'],
        'registerenhet': RegisterenhetFromJSON(json['registerenhet']),
        'bestiller': KontaktinfoFromJSON(json['bestiller']),
        'meglerkontor': MeglerkontorFromJSON(json['meglerkontor']),
        'kontaktperson': KontaktinfoFromJSON(json['kontaktperson']),
    };
}

export function EndringKjopereOrdreToJSON(json: any): EndringKjopereOrdre {
    return EndringKjopereOrdreToJSONTyped(json, false);
}

export function EndringKjopereOrdreToJSONTyped(value?: EndringKjopereOrdre | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'kjopere': ((value['kjopere'] as Array<any>).map(KontaktToJSON)),
        'ordreId': value['ordreId'],
        'estateId': value['estateId'],
        'oppdragsnummer': value['oppdragsnummer'],
        'registerenhet': RegisterenhetToJSON(value['registerenhet']),
        'bestiller': KontaktinfoToJSON(value['bestiller']),
        'meglerkontor': MeglerkontorToJSON(value['meglerkontor']),
        'kontaktperson': KontaktinfoToJSON(value['kontaktperson']),
    };
}

