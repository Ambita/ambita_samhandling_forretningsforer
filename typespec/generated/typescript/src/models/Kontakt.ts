/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Adresse } from './Adresse';
import {
    AdresseFromJSON,
    AdresseFromJSONTyped,
    AdresseToJSON,
    AdresseToJSONTyped,
} from './Adresse';
import type { Eierbrok } from './Eierbrok';
import {
    EierbrokFromJSON,
    EierbrokFromJSONTyped,
    EierbrokToJSON,
    EierbrokToJSONTyped,
} from './Eierbrok';

/**
 * 
 * @export
 * @interface Kontakt
 */
export interface Kontakt {
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    fornavn?: string;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    etternavn?: string;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    organisasjonsnavn?: string;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    kontaktperson?: string;
    /**
     * 
     * @type {Adresse}
     * @memberof Kontakt
     */
    adresse?: Adresse;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    epost?: string;
    /**
     * 
     * @type {string}
     * @memberof Kontakt
     */
    telefon?: string;
    /**
     * 
     * @type {Eierbrok}
     * @memberof Kontakt
     */
    eierbrok?: Eierbrok;
}

/**
 * Check if a given object implements the Kontakt interface.
 */
export function instanceOfKontakt(value: object): value is Kontakt {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function KontaktFromJSON(json: any): Kontakt {
    return KontaktFromJSONTyped(json, false);
}

export function KontaktFromJSONTyped(json: any, ignoreDiscriminator: boolean): Kontakt {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fornavn': json['fornavn'] == null ? undefined : json['fornavn'],
        'etternavn': json['etternavn'] == null ? undefined : json['etternavn'],
        'organisasjonsnavn': json['organisasjonsnavn'] == null ? undefined : json['organisasjonsnavn'],
        'kontaktperson': json['kontaktperson'] == null ? undefined : json['kontaktperson'],
        'adresse': json['adresse'] == null ? undefined : AdresseFromJSON(json['adresse']),
        'epost': json['epost'] == null ? undefined : json['epost'],
        'telefon': json['telefon'] == null ? undefined : json['telefon'],
        'eierbrok': json['eierbrok'] == null ? undefined : EierbrokFromJSON(json['eierbrok']),
    };
}

export function KontaktToJSON(json: any): Kontakt {
    return KontaktToJSONTyped(json, false);
}

export function KontaktToJSONTyped(value?: Kontakt | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fornavn': value['fornavn'],
        'etternavn': value['etternavn'],
        'organisasjonsnavn': value['organisasjonsnavn'],
        'kontaktperson': value['kontaktperson'],
        'adresse': AdresseToJSON(value['adresse']),
        'epost': value['epost'],
        'telefon': value['telefon'],
        'eierbrok': EierbrokToJSON(value['eierbrok']),
    };
}

