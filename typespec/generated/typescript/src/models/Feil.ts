/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BasicResponseForretningsforer } from './BasicResponseForretningsforer';
import {
    BasicResponseForretningsforerFromJSON,
    BasicResponseForretningsforerFromJSONTyped,
    BasicResponseForretningsforerToJSON,
    BasicResponseForretningsforerToJSONTyped,
} from './BasicResponseForretningsforer';
import type { Klient } from './Klient';
import {
    KlientFromJSON,
    KlientFromJSONTyped,
    KlientToJSON,
    KlientToJSONTyped,
} from './Klient';
import type { Feilkode } from './Feilkode';
import {
    FeilkodeFromJSON,
    FeilkodeFromJSONTyped,
    FeilkodeToJSON,
    FeilkodeToJSONTyped,
} from './Feilkode';

/**
 * Feil
 * optional - used to report errors
 * @export
 * @interface Feil
 */
export interface Feil {
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    type: FeilTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    feilmelding: string;
    /**
     * 
     * @type {Feilkode}
     * @memberof Feil
     */
    feilkode?: Feilkode;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    tidspunkt: string;
    /**
     * 
     * @type {boolean}
     * @memberof Feil
     */
    kansellert?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    ordreId: string;
    /**
     * 
     * @type {BasicResponseForretningsforer}
     * @memberof Feil
     */
    forretningsforer: BasicResponseForretningsforer;
    /**
     * 
     * @type {Klient}
     * @memberof Feil
     */
    klient?: Klient;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    levert?: string;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    referanse?: string;
    /**
     * 
     * @type {string}
     * @memberof Feil
     */
    eierform?: FeilEierformEnum;
}


/**
 * @export
 */
export const FeilTypeEnum = {
    Feil: 'feil'
} as const;
export type FeilTypeEnum = typeof FeilTypeEnum[keyof typeof FeilTypeEnum];

/**
 * @export
 */
export const FeilEierformEnum = {
    Aksjonr: 'Aksjon√•r',
    Andelseier: 'Andelseier',
    Sameier: 'Sameier',
    Seksjonseier: 'Seksjonseier'
} as const;
export type FeilEierformEnum = typeof FeilEierformEnum[keyof typeof FeilEierformEnum];


/**
 * Check if a given object implements the Feil interface.
 */
export function instanceOfFeil(value: object): value is Feil {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('feilmelding' in value) || value['feilmelding'] === undefined) return false;
    if (!('tidspunkt' in value) || value['tidspunkt'] === undefined) return false;
    if (!('ordreId' in value) || value['ordreId'] === undefined) return false;
    if (!('forretningsforer' in value) || value['forretningsforer'] === undefined) return false;
    return true;
}

export function FeilFromJSON(json: any): Feil {
    return FeilFromJSONTyped(json, false);
}

export function FeilFromJSONTyped(json: any, ignoreDiscriminator: boolean): Feil {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'feilmelding': json['feilmelding'],
        'feilkode': json['feilkode'] == null ? undefined : FeilkodeFromJSON(json['feilkode']),
        'tidspunkt': json['tidspunkt'],
        'kansellert': json['kansellert'] == null ? undefined : json['kansellert'],
        'ordreId': json['ordreId'],
        'forretningsforer': BasicResponseForretningsforerFromJSON(json['forretningsforer']),
        'klient': json['klient'] == null ? undefined : KlientFromJSON(json['klient']),
        'levert': json['levert'] == null ? undefined : json['levert'],
        'referanse': json['referanse'] == null ? undefined : json['referanse'],
        'eierform': json['eierform'] == null ? undefined : json['eierform'],
    };
}

export function FeilToJSON(json: any): Feil {
    return FeilToJSONTyped(json, false);
}

export function FeilToJSONTyped(value?: Feil | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'feilmelding': value['feilmelding'],
        'feilkode': FeilkodeToJSON(value['feilkode']),
        'tidspunkt': value['tidspunkt'],
        'kansellert': value['kansellert'],
        'ordreId': value['ordreId'],
        'forretningsforer': BasicResponseForretningsforerToJSON(value['forretningsforer']),
        'klient': KlientToJSON(value['klient']),
        'levert': value['levert'],
        'referanse': value['referanse'],
        'eierform': value['eierform'],
    };
}

