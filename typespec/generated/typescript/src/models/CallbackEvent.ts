/* tslint:disable */
/* eslint-disable */
/**
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Kontakt } from './Kontakt';
import {
    KontaktFromJSON,
    KontaktFromJSONTyped,
    KontaktToJSON,
    KontaktToJSONTyped,
} from './Kontakt';
import type { SumFelleskostnaderSvar } from './SumFelleskostnaderSvar';
import {
    SumFelleskostnaderSvarFromJSON,
    SumFelleskostnaderSvarFromJSONTyped,
    SumFelleskostnaderSvarToJSON,
    SumFelleskostnaderSvarToJSONTyped,
} from './SumFelleskostnaderSvar';
import type { EndringOverdragelseBehandlet } from './EndringOverdragelseBehandlet';
import {
    EndringOverdragelseBehandletFromJSON,
    EndringOverdragelseBehandletFromJSONTyped,
    EndringOverdragelseBehandletToJSON,
    EndringOverdragelseBehandletToJSONTyped,
} from './EndringOverdragelseBehandlet';
import type { Feil } from './Feil';
import {
    FeilFromJSON,
    FeilFromJSONTyped,
    FeilToJSON,
    FeilToJSONTyped,
} from './Feil';
import type { SluttbrevAkseptert } from './SluttbrevAkseptert';
import {
    SluttbrevAkseptertFromJSON,
    SluttbrevAkseptertFromJSONTyped,
    SluttbrevAkseptertToJSON,
    SluttbrevAkseptertToJSONTyped,
} from './SluttbrevAkseptert';
import type { SalgsmeldingFullfort } from './SalgsmeldingFullfort';
import {
    SalgsmeldingFullfortFromJSON,
    SalgsmeldingFullfortFromJSONTyped,
    SalgsmeldingFullfortToJSON,
    SalgsmeldingFullfortToJSONTyped,
} from './SalgsmeldingFullfort';
import type { StyregodkjenningFullfort } from './StyregodkjenningFullfort';
import {
    StyregodkjenningFullfortFromJSON,
    StyregodkjenningFullfortFromJSONTyped,
    StyregodkjenningFullfortToJSON,
    StyregodkjenningFullfortToJSONTyped,
} from './StyregodkjenningFullfort';
import type { SumGjeldSvar } from './SumGjeldSvar';
import {
    SumGjeldSvarFromJSON,
    SumGjeldSvarFromJSONTyped,
    SumGjeldSvarToJSON,
    SumGjeldSvarToJSONTyped,
} from './SumGjeldSvar';
import type { BestillingsFormat } from './BestillingsFormat';
import {
    BestillingsFormatFromJSON,
    BestillingsFormatFromJSONTyped,
    BestillingsFormatToJSON,
    BestillingsFormatToJSONTyped,
} from './BestillingsFormat';
import type { ForhandsutlysingUtlopt } from './ForhandsutlysingUtlopt';
import {
    ForhandsutlysingUtloptFromJSON,
    ForhandsutlysingUtloptFromJSONTyped,
    ForhandsutlysingUtloptToJSON,
    ForhandsutlysingUtloptToJSONTyped,
} from './ForhandsutlysingUtlopt';
import type { EndringKjopereFullfort } from './EndringKjopereFullfort';
import {
    EndringKjopereFullfortFromJSON,
    EndringKjopereFullfortFromJSONTyped,
    EndringKjopereFullfortToJSON,
    EndringKjopereFullfortToJSONTyped,
} from './EndringKjopereFullfort';
import type { BasicResponseForretningsforer } from './BasicResponseForretningsforer';
import {
    BasicResponseForretningsforerFromJSON,
    BasicResponseForretningsforerFromJSONTyped,
    BasicResponseForretningsforerToJSON,
    BasicResponseForretningsforerToJSONTyped,
} from './BasicResponseForretningsforer';
import type { SalgsmeldingMottatt } from './SalgsmeldingMottatt';
import {
    SalgsmeldingMottattFromJSON,
    SalgsmeldingMottattFromJSONTyped,
    SalgsmeldingMottattToJSON,
    SalgsmeldingMottattToJSONTyped,
} from './SalgsmeldingMottatt';
import type { SalgsmeldingForkjopsrettFullfort } from './SalgsmeldingForkjopsrettFullfort';
import {
    SalgsmeldingForkjopsrettFullfortFromJSON,
    SalgsmeldingForkjopsrettFullfortFromJSONTyped,
    SalgsmeldingForkjopsrettFullfortToJSON,
    SalgsmeldingForkjopsrettFullfortToJSONTyped,
} from './SalgsmeldingForkjopsrettFullfort';
import type { ForhandsutlysingTidlig } from './ForhandsutlysingTidlig';
import {
    ForhandsutlysingTidligFromJSON,
    ForhandsutlysingTidligFromJSONTyped,
    ForhandsutlysingTidligToJSON,
    ForhandsutlysingTidligToJSONTyped,
} from './ForhandsutlysingTidlig';
import type { BoliginformasjonResponse } from './BoliginformasjonResponse';
import {
    BoliginformasjonResponseFromJSON,
    BoliginformasjonResponseFromJSONTyped,
    BoliginformasjonResponseToJSON,
    BoliginformasjonResponseToJSONTyped,
} from './BoliginformasjonResponse';
import type { EndringKjopereMottatt } from './EndringKjopereMottatt';
import {
    EndringKjopereMottattFromJSON,
    EndringKjopereMottattFromJSONTyped,
    EndringKjopereMottattToJSON,
    EndringKjopereMottattToJSONTyped,
} from './EndringKjopereMottatt';
import type { SalgsmeldingOppdatering } from './SalgsmeldingOppdatering';
import {
    SalgsmeldingOppdateringFromJSON,
    SalgsmeldingOppdateringFromJSONTyped,
    SalgsmeldingOppdateringToJSON,
    SalgsmeldingOppdateringToJSONTyped,
} from './SalgsmeldingOppdatering';
import type { ForhandsutlysingSen } from './ForhandsutlysingSen';
import {
    ForhandsutlysingSenFromJSON,
    ForhandsutlysingSenFromJSONTyped,
    ForhandsutlysingSenToJSON,
    ForhandsutlysingSenToJSONTyped,
} from './ForhandsutlysingSen';
import type { ForhandsutlysingUtsatt } from './ForhandsutlysingUtsatt';
import {
    ForhandsutlysingUtsattFromJSON,
    ForhandsutlysingUtsattFromJSONTyped,
    ForhandsutlysingUtsattToJSON,
    ForhandsutlysingUtsattToJSONTyped,
} from './ForhandsutlysingUtsatt';
import type { Klient } from './Klient';
import {
    KlientFromJSON,
    KlientFromJSONTyped,
    KlientToJSON,
    KlientToJSONTyped,
} from './Klient';
import type { Feilkode } from './Feilkode';
import {
    FeilkodeFromJSON,
    FeilkodeFromJSONTyped,
    FeilkodeToJSON,
    FeilkodeToJSONTyped,
} from './Feilkode';

/**
 * 
 * @export
 * @interface CallbackEvent
 */
export interface CallbackEvent {
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    type: CallbackEventTypeEnum;
    /**
     * 
     * @type {SalgsmeldingForkjopsrettFullfort}
     * @memberof CallbackEvent
     */
    forkjopsrett: SalgsmeldingForkjopsrettFullfort;
    /**
     * 
     * @type {StyregodkjenningFullfort}
     * @memberof CallbackEvent
     */
    styregodkjenning: StyregodkjenningFullfort;
    /**
     * 
     * @type {object}
     * @memberof CallbackEvent
     */
    salgsmelding: object;
    /**
     * 
     * @type {object}
     * @memberof CallbackEvent
     */
    restanse: object;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    andreHensyn?: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    ordreId: string;
    /**
     * 
     * @type {BasicResponseForretningsforer}
     * @memberof CallbackEvent
     */
    forretningsforer: BasicResponseForretningsforer;
    /**
     * 
     * @type {Klient}
     * @memberof CallbackEvent
     */
    klient?: Klient;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    levert?: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    referanse?: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    eierform?: CallbackEventEierformEnum;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    feilmelding: string;
    /**
     * 
     * @type {Feilkode}
     * @memberof CallbackEvent
     */
    feilkode?: Feilkode;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    tidspunkt: string;
    /**
     * 
     * @type {boolean}
     * @memberof CallbackEvent
     */
    kansellert?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    ordreMottatt: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    utlysingssted: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    utlysingsdato: string;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    meldefrist: string;
    /**
     * 
     * @type {number}
     * @memberof CallbackEvent
     */
    antallInteressenter: number;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    varighetForkjopsrett: string;
    /**
     * 
     * @type {boolean}
     * @memberof CallbackEvent
     */
    datoEndret: boolean;
    /**
     * 
     * @type {string}
     * @memberof CallbackEvent
     */
    avvisningsarsak?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CallbackEvent
     */
    harForkjopsrett: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CallbackEvent
     */
    styregodkjenningPakrevd: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CallbackEvent
     */
    tilknyttetLag: boolean;
    /**
     * 
     * @type {Array<Kontakt>}
     * @memberof CallbackEvent
     */
    kjopere: Array<Kontakt>;
    /**
     * 
     * @type {number}
     * @memberof CallbackEvent
     */
    sumGjeld: number;
    /**
     * 
     * @type {number}
     * @memberof CallbackEvent
     */
    sumFelleskostnader: number;
}


/**
 * @export
 */
export const CallbackEventTypeEnum = {
    Boliginformasjon: 'boliginformasjon',
    Forhandsutlysingtidlig: 'forhandsutlysingtidlig',
    Forhandsutlysingutsatt: 'forhandsutlysingutsatt',
    Forhandsutlysingsen: 'forhandsutlysingsen',
    Forhandsutlysingutlopt: 'forhandsutlysingutlopt',
    Salgsmeldingmottatt: 'salgsmeldingmottatt',
    Salgsmeldingoppdatering: 'salgsmeldingoppdatering',
    Salgsmeldingfullfort: 'salgsmeldingfullfort',
    Endringoverdragelse: 'endringoverdragelse',
    Endringkjoperemottatt: 'endringkjoperemottatt',
    Endringkjoperefullfort: 'endringkjoperefullfort',
    Sluttbrevakseptert: 'sluttbrevakseptert',
    Sumgjeld: 'sumgjeld',
    Sumfelleskostnader: 'sumfelleskostnader',
    Feil: 'feil'
} as const;
export type CallbackEventTypeEnum = typeof CallbackEventTypeEnum[keyof typeof CallbackEventTypeEnum];

/**
 * @export
 */
export const CallbackEventEierformEnum = {
    Aksjonr: 'Aksjonår',
    Andelseier: 'Andelseier',
    Sameier: 'Sameier',
    Seksjonseier: 'Seksjonseier'
} as const;
export type CallbackEventEierformEnum = typeof CallbackEventEierformEnum[keyof typeof CallbackEventEierformEnum];


/**
 * Check if a given object implements the CallbackEvent interface.
 */
export function instanceOfCallbackEvent(value: object): value is CallbackEvent {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('forkjopsrett' in value) || value['forkjopsrett'] === undefined) return false;
    if (!('styregodkjenning' in value) || value['styregodkjenning'] === undefined) return false;
    if (!('salgsmelding' in value) || value['salgsmelding'] === undefined) return false;
    if (!('restanse' in value) || value['restanse'] === undefined) return false;
    if (!('ordreId' in value) || value['ordreId'] === undefined) return false;
    if (!('forretningsforer' in value) || value['forretningsforer'] === undefined) return false;
    if (!('feilmelding' in value) || value['feilmelding'] === undefined) return false;
    if (!('tidspunkt' in value) || value['tidspunkt'] === undefined) return false;
    if (!('ordreMottatt' in value) || value['ordreMottatt'] === undefined) return false;
    if (!('utlysingssted' in value) || value['utlysingssted'] === undefined) return false;
    if (!('utlysingsdato' in value) || value['utlysingsdato'] === undefined) return false;
    if (!('meldefrist' in value) || value['meldefrist'] === undefined) return false;
    if (!('antallInteressenter' in value) || value['antallInteressenter'] === undefined) return false;
    if (!('varighetForkjopsrett' in value) || value['varighetForkjopsrett'] === undefined) return false;
    if (!('datoEndret' in value) || value['datoEndret'] === undefined) return false;
    if (!('harForkjopsrett' in value) || value['harForkjopsrett'] === undefined) return false;
    if (!('styregodkjenningPakrevd' in value) || value['styregodkjenningPakrevd'] === undefined) return false;
    if (!('tilknyttetLag' in value) || value['tilknyttetLag'] === undefined) return false;
    if (!('kjopere' in value) || value['kjopere'] === undefined) return false;
    if (!('sumGjeld' in value) || value['sumGjeld'] === undefined) return false;
    if (!('sumFelleskostnader' in value) || value['sumFelleskostnader'] === undefined) return false;
    return true;
}

export function CallbackEventFromJSON(json: any): CallbackEvent {
    return CallbackEventFromJSONTyped(json, false);
}

export function CallbackEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): CallbackEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'forkjopsrett': SalgsmeldingForkjopsrettFullfortFromJSON(json['forkjopsrett']),
        'styregodkjenning': StyregodkjenningFullfortFromJSON(json['styregodkjenning']),
        'salgsmelding': json['salgsmelding'],
        'restanse': json['restanse'],
        'andreHensyn': json['andreHensyn'] == null ? undefined : json['andreHensyn'],
        'ordreId': json['ordreId'],
        'forretningsforer': BasicResponseForretningsforerFromJSON(json['forretningsforer']),
        'klient': json['klient'] == null ? undefined : KlientFromJSON(json['klient']),
        'levert': json['levert'] == null ? undefined : json['levert'],
        'referanse': json['referanse'] == null ? undefined : json['referanse'],
        'eierform': json['eierform'] == null ? undefined : json['eierform'],
        'feilmelding': json['feilmelding'],
        'feilkode': json['feilkode'] == null ? undefined : FeilkodeFromJSON(json['feilkode']),
        'tidspunkt': json['tidspunkt'],
        'kansellert': json['kansellert'] == null ? undefined : json['kansellert'],
        'ordreMottatt': json['ordreMottatt'],
        'utlysingssted': json['utlysingssted'],
        'utlysingsdato': json['utlysingsdato'],
        'meldefrist': json['meldefrist'],
        'antallInteressenter': json['antallInteressenter'],
        'varighetForkjopsrett': json['varighetForkjopsrett'],
        'datoEndret': json['datoEndret'],
        'avvisningsarsak': json['avvisningsarsak'] == null ? undefined : json['avvisningsarsak'],
        'harForkjopsrett': json['harForkjopsrett'],
        'styregodkjenningPakrevd': json['styregodkjenningPakrevd'],
        'tilknyttetLag': json['tilknyttetLag'],
        'kjopere': ((json['kjopere'] as Array<any>).map(KontaktFromJSON)),
        'sumGjeld': json['sumGjeld'],
        'sumFelleskostnader': json['sumFelleskostnader'],
    };
}

export function CallbackEventToJSON(json: any): CallbackEvent {
    return CallbackEventToJSONTyped(json, false);
}

export function CallbackEventToJSONTyped(value?: CallbackEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'forkjopsrett': SalgsmeldingForkjopsrettFullfortToJSON(value['forkjopsrett']),
        'styregodkjenning': StyregodkjenningFullfortToJSON(value['styregodkjenning']),
        'salgsmelding': value['salgsmelding'],
        'restanse': value['restanse'],
        'andreHensyn': value['andreHensyn'],
        'ordreId': value['ordreId'],
        'forretningsforer': BasicResponseForretningsforerToJSON(value['forretningsforer']),
        'klient': KlientToJSON(value['klient']),
        'levert': value['levert'],
        'referanse': value['referanse'],
        'eierform': value['eierform'],
        'feilmelding': value['feilmelding'],
        'feilkode': FeilkodeToJSON(value['feilkode']),
        'tidspunkt': value['tidspunkt'],
        'kansellert': value['kansellert'],
        'ordreMottatt': value['ordreMottatt'],
        'utlysingssted': value['utlysingssted'],
        'utlysingsdato': value['utlysingsdato'],
        'meldefrist': value['meldefrist'],
        'antallInteressenter': value['antallInteressenter'],
        'varighetForkjopsrett': value['varighetForkjopsrett'],
        'datoEndret': value['datoEndret'],
        'avvisningsarsak': value['avvisningsarsak'],
        'harForkjopsrett': value['harForkjopsrett'],
        'styregodkjenningPakrevd': value['styregodkjenningPakrevd'],
        'tilknyttetLag': value['tilknyttetLag'],
        'kjopere': ((value['kjopere'] as Array<any>).map(KontaktToJSON)),
        'sumGjeld': value['sumGjeld'],
        'sumFelleskostnader': value['sumFelleskostnader'],
    };
}

