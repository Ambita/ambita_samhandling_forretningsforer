/*
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.Kontaktinfo;
import org.openapitools.client.model.Meglerkontor;
import org.openapitools.client.model.Registerenhet;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Restanse Order and handle arrears - not yet designed
 */
@JsonPropertyOrder({
  RestanseOrdre.JSON_PROPERTY_TYPE,
  RestanseOrdre.JSON_PROPERTY_ORDRE_ID,
  RestanseOrdre.JSON_PROPERTY_ESTATE_ID,
  RestanseOrdre.JSON_PROPERTY_OPPDRAGSNUMMER,
  RestanseOrdre.JSON_PROPERTY_REGISTERENHET,
  RestanseOrdre.JSON_PROPERTY_BESTILLER,
  RestanseOrdre.JSON_PROPERTY_MEGLERKONTOR,
  RestanseOrdre.JSON_PROPERTY_KONTAKTPERSON
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T20:06:52.009382+02:00[Europe/Oslo]", comments = "Generator version: 7.15.0")
public class RestanseOrdre {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    RESTANSE(String.valueOf("restanse"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_ORDRE_ID = "ordreId";
  @javax.annotation.Nonnull
  private String ordreId;

  public static final String JSON_PROPERTY_ESTATE_ID = "estateId";
  @javax.annotation.Nullable
  private String estateId;

  public static final String JSON_PROPERTY_OPPDRAGSNUMMER = "oppdragsnummer";
  @javax.annotation.Nullable
  private String oppdragsnummer;

  public static final String JSON_PROPERTY_REGISTERENHET = "registerenhet";
  @javax.annotation.Nonnull
  private Registerenhet registerenhet;

  public static final String JSON_PROPERTY_BESTILLER = "bestiller";
  @javax.annotation.Nonnull
  private Kontaktinfo bestiller;

  public static final String JSON_PROPERTY_MEGLERKONTOR = "meglerkontor";
  @javax.annotation.Nonnull
  private Meglerkontor meglerkontor;

  public static final String JSON_PROPERTY_KONTAKTPERSON = "kontaktperson";
  @javax.annotation.Nonnull
  private Kontaktinfo kontaktperson;

  public RestanseOrdre() { 
  }

  public RestanseOrdre type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public RestanseOrdre ordreId(@javax.annotation.Nonnull String ordreId) {
    this.ordreId = ordreId;
    return this;
  }

  /**
   * Get ordreId
   * @return ordreId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDRE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getOrdreId() {
    return ordreId;
  }


  @JsonProperty(JSON_PROPERTY_ORDRE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrdreId(@javax.annotation.Nonnull String ordreId) {
    this.ordreId = ordreId;
  }


  public RestanseOrdre estateId(@javax.annotation.Nullable String estateId) {
    this.estateId = estateId;
    return this;
  }

  /**
   * Get estateId
   * @return estateId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ESTATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEstateId() {
    return estateId;
  }


  @JsonProperty(JSON_PROPERTY_ESTATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstateId(@javax.annotation.Nullable String estateId) {
    this.estateId = estateId;
  }


  public RestanseOrdre oppdragsnummer(@javax.annotation.Nullable String oppdragsnummer) {
    this.oppdragsnummer = oppdragsnummer;
    return this;
  }

  /**
   * Get oppdragsnummer
   * @return oppdragsnummer
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPPDRAGSNUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOppdragsnummer() {
    return oppdragsnummer;
  }


  @JsonProperty(JSON_PROPERTY_OPPDRAGSNUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOppdragsnummer(@javax.annotation.Nullable String oppdragsnummer) {
    this.oppdragsnummer = oppdragsnummer;
  }


  public RestanseOrdre registerenhet(@javax.annotation.Nonnull Registerenhet registerenhet) {
    this.registerenhet = registerenhet;
    return this;
  }

  /**
   * Get registerenhet
   * @return registerenhet
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGISTERENHET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Registerenhet getRegisterenhet() {
    return registerenhet;
  }


  @JsonProperty(JSON_PROPERTY_REGISTERENHET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegisterenhet(@javax.annotation.Nonnull Registerenhet registerenhet) {
    this.registerenhet = registerenhet;
  }


  public RestanseOrdre bestiller(@javax.annotation.Nonnull Kontaktinfo bestiller) {
    this.bestiller = bestiller;
    return this;
  }

  /**
   * Get bestiller
   * @return bestiller
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BESTILLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Kontaktinfo getBestiller() {
    return bestiller;
  }


  @JsonProperty(JSON_PROPERTY_BESTILLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBestiller(@javax.annotation.Nonnull Kontaktinfo bestiller) {
    this.bestiller = bestiller;
  }


  public RestanseOrdre meglerkontor(@javax.annotation.Nonnull Meglerkontor meglerkontor) {
    this.meglerkontor = meglerkontor;
    return this;
  }

  /**
   * Get meglerkontor
   * @return meglerkontor
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MEGLERKONTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Meglerkontor getMeglerkontor() {
    return meglerkontor;
  }


  @JsonProperty(JSON_PROPERTY_MEGLERKONTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMeglerkontor(@javax.annotation.Nonnull Meglerkontor meglerkontor) {
    this.meglerkontor = meglerkontor;
  }


  public RestanseOrdre kontaktperson(@javax.annotation.Nonnull Kontaktinfo kontaktperson) {
    this.kontaktperson = kontaktperson;
    return this;
  }

  /**
   * Get kontaktperson
   * @return kontaktperson
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KONTAKTPERSON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Kontaktinfo getKontaktperson() {
    return kontaktperson;
  }


  @JsonProperty(JSON_PROPERTY_KONTAKTPERSON)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKontaktperson(@javax.annotation.Nonnull Kontaktinfo kontaktperson) {
    this.kontaktperson = kontaktperson;
  }


  /**
   * Return true if this RestanseOrdre object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestanseOrdre restanseOrdre = (RestanseOrdre) o;
    return Objects.equals(this.type, restanseOrdre.type) &&
        Objects.equals(this.ordreId, restanseOrdre.ordreId) &&
        Objects.equals(this.estateId, restanseOrdre.estateId) &&
        Objects.equals(this.oppdragsnummer, restanseOrdre.oppdragsnummer) &&
        Objects.equals(this.registerenhet, restanseOrdre.registerenhet) &&
        Objects.equals(this.bestiller, restanseOrdre.bestiller) &&
        Objects.equals(this.meglerkontor, restanseOrdre.meglerkontor) &&
        Objects.equals(this.kontaktperson, restanseOrdre.kontaktperson);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, ordreId, estateId, oppdragsnummer, registerenhet, bestiller, meglerkontor, kontaktperson);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestanseOrdre {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    ordreId: ").append(toIndentedString(ordreId)).append("\n");
    sb.append("    estateId: ").append(toIndentedString(estateId)).append("\n");
    sb.append("    oppdragsnummer: ").append(toIndentedString(oppdragsnummer)).append("\n");
    sb.append("    registerenhet: ").append(toIndentedString(registerenhet)).append("\n");
    sb.append("    bestiller: ").append(toIndentedString(bestiller)).append("\n");
    sb.append("    meglerkontor: ").append(toIndentedString(meglerkontor)).append("\n");
    sb.append("    kontaktperson: ").append(toIndentedString(kontaktperson)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `ordreId` to the URL query string
    if (getOrdreId() != null) {
      joiner.add(String.format("%sordreId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrdreId()))));
    }

    // add `estateId` to the URL query string
    if (getEstateId() != null) {
      joiner.add(String.format("%sestateId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEstateId()))));
    }

    // add `oppdragsnummer` to the URL query string
    if (getOppdragsnummer() != null) {
      joiner.add(String.format("%soppdragsnummer%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOppdragsnummer()))));
    }

    // add `registerenhet` to the URL query string
    if (getRegisterenhet() != null) {
      joiner.add(getRegisterenhet().toUrlQueryString(prefix + "registerenhet" + suffix));
    }

    // add `bestiller` to the URL query string
    if (getBestiller() != null) {
      joiner.add(getBestiller().toUrlQueryString(prefix + "bestiller" + suffix));
    }

    // add `meglerkontor` to the URL query string
    if (getMeglerkontor() != null) {
      joiner.add(getMeglerkontor().toUrlQueryString(prefix + "meglerkontor" + suffix));
    }

    // add `kontaktperson` to the URL query string
    if (getKontaktperson() != null) {
      joiner.add(getKontaktperson().toUrlQueryString(prefix + "kontaktperson" + suffix));
    }

    return joiner.toString();
  }
}

