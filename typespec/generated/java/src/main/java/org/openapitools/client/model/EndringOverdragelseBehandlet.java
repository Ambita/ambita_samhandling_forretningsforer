/*
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.client.model.BasicResponseForretningsforer;
import org.openapitools.client.model.Klient;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * EndringOverdragelse required - Respond if the requested transfer date was accepted
 */
@JsonPropertyOrder({
  EndringOverdragelseBehandlet.JSON_PROPERTY_TYPE,
  EndringOverdragelseBehandlet.JSON_PROPERTY_DATO_ENDRET,
  EndringOverdragelseBehandlet.JSON_PROPERTY_AVVISNINGSARSAK,
  EndringOverdragelseBehandlet.JSON_PROPERTY_ORDRE_ID,
  EndringOverdragelseBehandlet.JSON_PROPERTY_FORRETNINGSFORER,
  EndringOverdragelseBehandlet.JSON_PROPERTY_KLIENT,
  EndringOverdragelseBehandlet.JSON_PROPERTY_LEVERT,
  EndringOverdragelseBehandlet.JSON_PROPERTY_REFERANSE,
  EndringOverdragelseBehandlet.JSON_PROPERTY_EIERFORM
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T20:06:52.009382+02:00[Europe/Oslo]", comments = "Generator version: 7.15.0")
public class EndringOverdragelseBehandlet {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    ENDRINGOVERDRAGELSE(String.valueOf("endringoverdragelse"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @javax.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_DATO_ENDRET = "datoEndret";
  @javax.annotation.Nonnull
  private Boolean datoEndret;

  public static final String JSON_PROPERTY_AVVISNINGSARSAK = "avvisningsarsak";
  @javax.annotation.Nullable
  private String avvisningsarsak;

  public static final String JSON_PROPERTY_ORDRE_ID = "ordreId";
  @javax.annotation.Nonnull
  private String ordreId;

  public static final String JSON_PROPERTY_FORRETNINGSFORER = "forretningsforer";
  @javax.annotation.Nonnull
  private BasicResponseForretningsforer forretningsforer;

  public static final String JSON_PROPERTY_KLIENT = "klient";
  @javax.annotation.Nullable
  private Klient klient;

  public static final String JSON_PROPERTY_LEVERT = "levert";
  @javax.annotation.Nullable
  private String levert;

  public static final String JSON_PROPERTY_REFERANSE = "referanse";
  @javax.annotation.Nullable
  private String referanse;

  /**
   * Gets or Sets eierform
   */
  public enum EierformEnum {
    AKSJON_R(String.valueOf("Aksjon√•r")),
    
    ANDELSEIER(String.valueOf("Andelseier")),
    
    SAMEIER(String.valueOf("Sameier")),
    
    SEKSJONSEIER(String.valueOf("Seksjonseier"));

    private String value;

    EierformEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EierformEnum fromValue(String value) {
      for (EierformEnum b : EierformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EIERFORM = "eierform";
  @javax.annotation.Nullable
  private EierformEnum eierform;

  public EndringOverdragelseBehandlet() { 
  }

  public EndringOverdragelseBehandlet type(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@javax.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public EndringOverdragelseBehandlet datoEndret(@javax.annotation.Nonnull Boolean datoEndret) {
    this.datoEndret = datoEndret;
    return this;
  }

  /**
   * Get datoEndret
   * @return datoEndret
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATO_ENDRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getDatoEndret() {
    return datoEndret;
  }


  @JsonProperty(JSON_PROPERTY_DATO_ENDRET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDatoEndret(@javax.annotation.Nonnull Boolean datoEndret) {
    this.datoEndret = datoEndret;
  }


  public EndringOverdragelseBehandlet avvisningsarsak(@javax.annotation.Nullable String avvisningsarsak) {
    this.avvisningsarsak = avvisningsarsak;
    return this;
  }

  /**
   * Get avvisningsarsak
   * @return avvisningsarsak
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVVISNINGSARSAK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAvvisningsarsak() {
    return avvisningsarsak;
  }


  @JsonProperty(JSON_PROPERTY_AVVISNINGSARSAK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvvisningsarsak(@javax.annotation.Nullable String avvisningsarsak) {
    this.avvisningsarsak = avvisningsarsak;
  }


  public EndringOverdragelseBehandlet ordreId(@javax.annotation.Nonnull String ordreId) {
    this.ordreId = ordreId;
    return this;
  }

  /**
   * Get ordreId
   * @return ordreId
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORDRE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getOrdreId() {
    return ordreId;
  }


  @JsonProperty(JSON_PROPERTY_ORDRE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrdreId(@javax.annotation.Nonnull String ordreId) {
    this.ordreId = ordreId;
  }


  public EndringOverdragelseBehandlet forretningsforer(@javax.annotation.Nonnull BasicResponseForretningsforer forretningsforer) {
    this.forretningsforer = forretningsforer;
    return this;
  }

  /**
   * Get forretningsforer
   * @return forretningsforer
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FORRETNINGSFORER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public BasicResponseForretningsforer getForretningsforer() {
    return forretningsforer;
  }


  @JsonProperty(JSON_PROPERTY_FORRETNINGSFORER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForretningsforer(@javax.annotation.Nonnull BasicResponseForretningsforer forretningsforer) {
    this.forretningsforer = forretningsforer;
  }


  public EndringOverdragelseBehandlet klient(@javax.annotation.Nullable Klient klient) {
    this.klient = klient;
    return this;
  }

  /**
   * Get klient
   * @return klient
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_KLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Klient getKlient() {
    return klient;
  }


  @JsonProperty(JSON_PROPERTY_KLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKlient(@javax.annotation.Nullable Klient klient) {
    this.klient = klient;
  }


  public EndringOverdragelseBehandlet levert(@javax.annotation.Nullable String levert) {
    this.levert = levert;
    return this;
  }

  /**
   * Get levert
   * @return levert
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LEVERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLevert() {
    return levert;
  }


  @JsonProperty(JSON_PROPERTY_LEVERT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLevert(@javax.annotation.Nullable String levert) {
    this.levert = levert;
  }


  public EndringOverdragelseBehandlet referanse(@javax.annotation.Nullable String referanse) {
    this.referanse = referanse;
    return this;
  }

  /**
   * Get referanse
   * @return referanse
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERANSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getReferanse() {
    return referanse;
  }


  @JsonProperty(JSON_PROPERTY_REFERANSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferanse(@javax.annotation.Nullable String referanse) {
    this.referanse = referanse;
  }


  public EndringOverdragelseBehandlet eierform(@javax.annotation.Nullable EierformEnum eierform) {
    this.eierform = eierform;
    return this;
  }

  /**
   * Get eierform
   * @return eierform
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EIERFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EierformEnum getEierform() {
    return eierform;
  }


  @JsonProperty(JSON_PROPERTY_EIERFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEierform(@javax.annotation.Nullable EierformEnum eierform) {
    this.eierform = eierform;
  }


  /**
   * Return true if this EndringOverdragelseBehandlet object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndringOverdragelseBehandlet endringOverdragelseBehandlet = (EndringOverdragelseBehandlet) o;
    return Objects.equals(this.type, endringOverdragelseBehandlet.type) &&
        Objects.equals(this.datoEndret, endringOverdragelseBehandlet.datoEndret) &&
        Objects.equals(this.avvisningsarsak, endringOverdragelseBehandlet.avvisningsarsak) &&
        Objects.equals(this.ordreId, endringOverdragelseBehandlet.ordreId) &&
        Objects.equals(this.forretningsforer, endringOverdragelseBehandlet.forretningsforer) &&
        Objects.equals(this.klient, endringOverdragelseBehandlet.klient) &&
        Objects.equals(this.levert, endringOverdragelseBehandlet.levert) &&
        Objects.equals(this.referanse, endringOverdragelseBehandlet.referanse) &&
        Objects.equals(this.eierform, endringOverdragelseBehandlet.eierform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, datoEndret, avvisningsarsak, ordreId, forretningsforer, klient, levert, referanse, eierform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndringOverdragelseBehandlet {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    datoEndret: ").append(toIndentedString(datoEndret)).append("\n");
    sb.append("    avvisningsarsak: ").append(toIndentedString(avvisningsarsak)).append("\n");
    sb.append("    ordreId: ").append(toIndentedString(ordreId)).append("\n");
    sb.append("    forretningsforer: ").append(toIndentedString(forretningsforer)).append("\n");
    sb.append("    klient: ").append(toIndentedString(klient)).append("\n");
    sb.append("    levert: ").append(toIndentedString(levert)).append("\n");
    sb.append("    referanse: ").append(toIndentedString(referanse)).append("\n");
    sb.append("    eierform: ").append(toIndentedString(eierform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getType()))));
    }

    // add `ordreId` to the URL query string
    if (getOrdreId() != null) {
      joiner.add(String.format("%sordreId%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrdreId()))));
    }

    // add `forretningsforer` to the URL query string
    if (getForretningsforer() != null) {
      joiner.add(getForretningsforer().toUrlQueryString(prefix + "forretningsforer" + suffix));
    }

    // add `klient` to the URL query string
    if (getKlient() != null) {
      joiner.add(getKlient().toUrlQueryString(prefix + "klient" + suffix));
    }

    // add `levert` to the URL query string
    if (getLevert() != null) {
      joiner.add(String.format("%slevert%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLevert()))));
    }

    // add `referanse` to the URL query string
    if (getReferanse() != null) {
      joiner.add(String.format("%sreferanse%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getReferanse()))));
    }

    // add `eierform` to the URL query string
    if (getEierform() != null) {
      joiner.add(String.format("%seierform%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEierform()))));
    }

    return joiner.toString();
  }
}

