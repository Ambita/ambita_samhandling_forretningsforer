/*
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets Feilkode
 */
public enum Feilkode {
  
  NUMBER_1(new BigDecimal("1")),
  
  NUMBER_2(new BigDecimal("2")),
  
  NUMBER_4(new BigDecimal("4")),
  
  NUMBER_6(new BigDecimal("6")),
  
  NUMBER_8(new BigDecimal("8")),
  
  NUMBER_11(new BigDecimal("11")),
  
  NUMBER_12(new BigDecimal("12")),
  
  NUMBER_31(new BigDecimal("31")),
  
  NUMBER_32(new BigDecimal("32")),
  
  NUMBER_33(new BigDecimal("33")),
  
  NUMBER_34(new BigDecimal("34")),
  
  NUMBER_39(new BigDecimal("39"));

  private BigDecimal value;

  Feilkode(BigDecimal value) {
    this.value = value;
  }

  @JsonValue
  public BigDecimal getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static Feilkode fromValue(BigDecimal value) {
    for (Feilkode b : Feilkode.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }

}

