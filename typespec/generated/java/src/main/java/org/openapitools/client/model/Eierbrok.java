/*
 * (title)
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import org.openapitools.client.ApiClient;
/**
 * Eierbrok
 */
@JsonPropertyOrder({
  Eierbrok.JSON_PROPERTY_TELLER,
  Eierbrok.JSON_PROPERTY_NEVNER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-25T20:06:52.009382+02:00[Europe/Oslo]", comments = "Generator version: 7.15.0")
public class Eierbrok {
  public static final String JSON_PROPERTY_TELLER = "teller";
  @javax.annotation.Nonnull
  private Integer teller;

  public static final String JSON_PROPERTY_NEVNER = "nevner";
  @javax.annotation.Nonnull
  private Integer nevner;

  public Eierbrok() { 
  }

  public Eierbrok teller(@javax.annotation.Nonnull Integer teller) {
    this.teller = teller;
    return this;
  }

  /**
   * Get teller
   * @return teller
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TELLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getTeller() {
    return teller;
  }


  @JsonProperty(JSON_PROPERTY_TELLER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTeller(@javax.annotation.Nonnull Integer teller) {
    this.teller = teller;
  }


  public Eierbrok nevner(@javax.annotation.Nonnull Integer nevner) {
    this.nevner = nevner;
    return this;
  }

  /**
   * Get nevner
   * @return nevner
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEVNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getNevner() {
    return nevner;
  }


  @JsonProperty(JSON_PROPERTY_NEVNER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNevner(@javax.annotation.Nonnull Integer nevner) {
    this.nevner = nevner;
  }


  /**
   * Return true if this Eierbrok object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Eierbrok eierbrok = (Eierbrok) o;
    return Objects.equals(this.teller, eierbrok.teller) &&
        Objects.equals(this.nevner, eierbrok.nevner);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teller, nevner);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Eierbrok {\n");
    sb.append("    teller: ").append(toIndentedString(teller)).append("\n");
    sb.append("    nevner: ").append(toIndentedString(nevner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `teller` to the URL query string
    if (getTeller() != null) {
      joiner.add(String.format("%steller%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTeller()))));
    }

    // add `nevner` to the URL query string
    if (getNevner() != null) {
      joiner.add(String.format("%snevner%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNevner()))));
    }

    return joiner.toString();
  }
}

