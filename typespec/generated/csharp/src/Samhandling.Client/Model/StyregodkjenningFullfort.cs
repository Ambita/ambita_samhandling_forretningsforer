// <auto-generated>
/*
 * (title)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Samhandling.Client.Samhandling.Client;

namespace Samhandling.Client.Model
{
    /// <summary>
    /// StyregodkjenningFullfort
    /// </summary>
    public partial class StyregodkjenningFullfort : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StyregodkjenningFullfort" /> class.
        /// </summary>
        /// <param name="handteresAvForretningsforer">handteresAvForretningsforer</param>
        /// <param name="initiertDato">initiertDato</param>
        /// <param name="meldefrist">meldefrist</param>
        /// <param name="statusStyregodkjenning">statusStyregodkjenning</param>
        /// <param name="andreHensyn">andreHensyn</param>
        [JsonConstructor]
        public StyregodkjenningFullfort(bool handteresAvForretningsforer, Option<string?> initiertDato = default, Option<string?> meldefrist = default, Option<StatusStyregodkjenningEnum?> statusStyregodkjenning = default, Option<string?> andreHensyn = default)
        {
            HandteresAvForretningsforer = handteresAvForretningsforer;
            InitiertDatoOption = initiertDato;
            MeldefristOption = meldefrist;
            StatusStyregodkjenningOption = statusStyregodkjenning;
            AndreHensynOption = andreHensyn;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Defines StatusStyregodkjenning
        /// </summary>
        public enum StatusStyregodkjenningEnum
        {
            /// <summary>
            /// Enum GodkjentAvStyret for value: godkjent_av_styret
            /// </summary>
            GodkjentAvStyret = 1,

            /// <summary>
            /// Enum GodkjentAvBbl for value: godkjent_av_bbl
            /// </summary>
            GodkjentAvBbl = 2,

            /// <summary>
            /// Enum AvvistAvStyret for value: avvist_av_styret
            /// </summary>
            AvvistAvStyret = 3,

            /// <summary>
            /// Enum AvvistAvBbl for value: avvist_av_bbl
            /// </summary>
            AvvistAvBbl = 4,

            /// <summary>
            /// Enum FristUtlopt for value: frist_utlopt
            /// </summary>
            FristUtlopt = 5
        }

        /// <summary>
        /// Returns a <see cref="StatusStyregodkjenningEnum"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static StatusStyregodkjenningEnum StatusStyregodkjenningEnumFromString(string value)
        {
            if (value.Equals("godkjent_av_styret"))
                return StatusStyregodkjenningEnum.GodkjentAvStyret;

            if (value.Equals("godkjent_av_bbl"))
                return StatusStyregodkjenningEnum.GodkjentAvBbl;

            if (value.Equals("avvist_av_styret"))
                return StatusStyregodkjenningEnum.AvvistAvStyret;

            if (value.Equals("avvist_av_bbl"))
                return StatusStyregodkjenningEnum.AvvistAvBbl;

            if (value.Equals("frist_utlopt"))
                return StatusStyregodkjenningEnum.FristUtlopt;

            throw new NotImplementedException($"Could not convert value to type StatusStyregodkjenningEnum: '{value}'");
        }

        /// <summary>
        /// Returns a <see cref="StatusStyregodkjenningEnum"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static StatusStyregodkjenningEnum? StatusStyregodkjenningEnumFromStringOrDefault(string value)
        {
            if (value.Equals("godkjent_av_styret"))
                return StatusStyregodkjenningEnum.GodkjentAvStyret;

            if (value.Equals("godkjent_av_bbl"))
                return StatusStyregodkjenningEnum.GodkjentAvBbl;

            if (value.Equals("avvist_av_styret"))
                return StatusStyregodkjenningEnum.AvvistAvStyret;

            if (value.Equals("avvist_av_bbl"))
                return StatusStyregodkjenningEnum.AvvistAvBbl;

            if (value.Equals("frist_utlopt"))
                return StatusStyregodkjenningEnum.FristUtlopt;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="StatusStyregodkjenningEnum"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string StatusStyregodkjenningEnumToJsonValue(StatusStyregodkjenningEnum? value)
        {
            if (value == StatusStyregodkjenningEnum.GodkjentAvStyret)
                return "godkjent_av_styret";

            if (value == StatusStyregodkjenningEnum.GodkjentAvBbl)
                return "godkjent_av_bbl";

            if (value == StatusStyregodkjenningEnum.AvvistAvStyret)
                return "avvist_av_styret";

            if (value == StatusStyregodkjenningEnum.AvvistAvBbl)
                return "avvist_av_bbl";

            if (value == StatusStyregodkjenningEnum.FristUtlopt)
                return "frist_utlopt";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }

        /// <summary>
        /// Used to track the state of StatusStyregodkjenning
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<StatusStyregodkjenningEnum?> StatusStyregodkjenningOption { get; private set; }

        /// <summary>
        /// Gets or Sets StatusStyregodkjenning
        /// </summary>
        [JsonPropertyName("statusStyregodkjenning")]
        public StatusStyregodkjenningEnum? StatusStyregodkjenning { get { return this.StatusStyregodkjenningOption; } set { this.StatusStyregodkjenningOption = new(value); } }

        /// <summary>
        /// Gets or Sets HandteresAvForretningsforer
        /// </summary>
        [JsonPropertyName("handteresAvForretningsforer")]
        public bool HandteresAvForretningsforer { get; set; }

        /// <summary>
        /// Used to track the state of InitiertDato
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> InitiertDatoOption { get; private set; }

        /// <summary>
        /// Gets or Sets InitiertDato
        /// </summary>
        [JsonPropertyName("initiertDato")]
        public string? InitiertDato { get { return this.InitiertDatoOption; } set { this.InitiertDatoOption = new(value); } }

        /// <summary>
        /// Used to track the state of Meldefrist
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MeldefristOption { get; private set; }

        /// <summary>
        /// Gets or Sets Meldefrist
        /// </summary>
        [JsonPropertyName("meldefrist")]
        public string? Meldefrist { get { return this.MeldefristOption; } set { this.MeldefristOption = new(value); } }

        /// <summary>
        /// Used to track the state of AndreHensyn
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> AndreHensynOption { get; private set; }

        /// <summary>
        /// Gets or Sets AndreHensyn
        /// </summary>
        [JsonPropertyName("andreHensyn")]
        public string? AndreHensyn { get { return this.AndreHensynOption; } set { this.AndreHensynOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class StyregodkjenningFullfort {\n");
            sb.Append("  HandteresAvForretningsforer: ").Append(HandteresAvForretningsforer).Append("\n");
            sb.Append("  StatusStyregodkjenning: ").Append(StatusStyregodkjenning).Append("\n");
            sb.Append("  AndreHensyn: ").Append(AndreHensyn).Append("\n");
            sb.Append("  InitiertDato: ").Append(InitiertDato).Append("\n");
            sb.Append("  Meldefrist: ").Append(Meldefrist).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.InitiertDatoOption.Value != null) {
                // InitiertDato (string) pattern
                Regex regexInitiertDato = new Regex(@"^[0-9]{4}-[0-9]{2}-[0-9]{2}$", RegexOptions.CultureInvariant);

                if (this.InitiertDatoOption.Value != null &&!regexInitiertDato.Match(this.InitiertDatoOption.Value).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InitiertDato, must match a pattern of " + regexInitiertDato, new [] { "InitiertDato" });
                }
            }

            if (this.MeldefristOption.Value != null) {
                // Meldefrist (string) pattern
                Regex regexMeldefrist = new Regex(@"^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|[+-][0-9]{2}:[0-9]{2})$", RegexOptions.CultureInvariant);

                if (this.MeldefristOption.Value != null &&!regexMeldefrist.Match(this.MeldefristOption.Value).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Meldefrist, must match a pattern of " + regexMeldefrist, new [] { "Meldefrist" });
                }
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="StyregodkjenningFullfort" />
    /// </summary>
    public class StyregodkjenningFullfortJsonConverter : JsonConverter<StyregodkjenningFullfort>
    {
        /// <summary>
        /// Deserializes json to <see cref="StyregodkjenningFullfort" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override StyregodkjenningFullfort Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> handteresAvForretningsforer = default;
            Option<string?> initiertDato = default;
            Option<string?> meldefrist = default;
            Option<StyregodkjenningFullfort.StatusStyregodkjenningEnum?> statusStyregodkjenning = default;
            Option<string?> andreHensyn = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "handteresAvForretningsforer":
                            handteresAvForretningsforer = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "initiertDato":
                            initiertDato = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "meldefrist":
                            meldefrist = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "statusStyregodkjenning":
                            string? statusStyregodkjenningRawValue = utf8JsonReader.GetString();
                            if (statusStyregodkjenningRawValue != null)
                                statusStyregodkjenning = new Option<StyregodkjenningFullfort.StatusStyregodkjenningEnum?>(StyregodkjenningFullfort.StatusStyregodkjenningEnumFromStringOrDefault(statusStyregodkjenningRawValue));
                            break;
                        case "andreHensyn":
                            andreHensyn = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!handteresAvForretningsforer.IsSet)
                throw new ArgumentException("Property is required for class StyregodkjenningFullfort.", nameof(handteresAvForretningsforer));

            if (handteresAvForretningsforer.IsSet && handteresAvForretningsforer.Value == null)
                throw new ArgumentNullException(nameof(handteresAvForretningsforer), "Property is not nullable for class StyregodkjenningFullfort.");

            if (initiertDato.IsSet && initiertDato.Value == null)
                throw new ArgumentNullException(nameof(initiertDato), "Property is not nullable for class StyregodkjenningFullfort.");

            if (meldefrist.IsSet && meldefrist.Value == null)
                throw new ArgumentNullException(nameof(meldefrist), "Property is not nullable for class StyregodkjenningFullfort.");

            if (statusStyregodkjenning.IsSet && statusStyregodkjenning.Value == null)
                throw new ArgumentNullException(nameof(statusStyregodkjenning), "Property is not nullable for class StyregodkjenningFullfort.");

            if (andreHensyn.IsSet && andreHensyn.Value == null)
                throw new ArgumentNullException(nameof(andreHensyn), "Property is not nullable for class StyregodkjenningFullfort.");

            return new StyregodkjenningFullfort(handteresAvForretningsforer.Value!.Value!, initiertDato, meldefrist, statusStyregodkjenning, andreHensyn);
        }

        /// <summary>
        /// Serializes a <see cref="StyregodkjenningFullfort" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="styregodkjenningFullfort"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, StyregodkjenningFullfort styregodkjenningFullfort, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, styregodkjenningFullfort, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="StyregodkjenningFullfort" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="styregodkjenningFullfort"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, StyregodkjenningFullfort styregodkjenningFullfort, JsonSerializerOptions jsonSerializerOptions)
        {
            if (styregodkjenningFullfort.InitiertDatoOption.IsSet && styregodkjenningFullfort.InitiertDato == null)
                throw new ArgumentNullException(nameof(styregodkjenningFullfort.InitiertDato), "Property is required for class StyregodkjenningFullfort.");

            if (styregodkjenningFullfort.MeldefristOption.IsSet && styregodkjenningFullfort.Meldefrist == null)
                throw new ArgumentNullException(nameof(styregodkjenningFullfort.Meldefrist), "Property is required for class StyregodkjenningFullfort.");

            if (styregodkjenningFullfort.AndreHensynOption.IsSet && styregodkjenningFullfort.AndreHensyn == null)
                throw new ArgumentNullException(nameof(styregodkjenningFullfort.AndreHensyn), "Property is required for class StyregodkjenningFullfort.");

            writer.WriteBoolean("handteresAvForretningsforer", styregodkjenningFullfort.HandteresAvForretningsforer);

            if (styregodkjenningFullfort.InitiertDatoOption.IsSet)
                writer.WriteString("initiertDato", styregodkjenningFullfort.InitiertDato);

            if (styregodkjenningFullfort.MeldefristOption.IsSet)
                writer.WriteString("meldefrist", styregodkjenningFullfort.Meldefrist);

            var statusStyregodkjenningRawValue = StyregodkjenningFullfort.StatusStyregodkjenningEnumToJsonValue(styregodkjenningFullfort.StatusStyregodkjenningOption.Value!.Value);
            writer.WriteString("statusStyregodkjenning", statusStyregodkjenningRawValue);
            if (styregodkjenningFullfort.AndreHensynOption.IsSet)
                writer.WriteString("andreHensyn", styregodkjenningFullfort.AndreHensyn);
        }
    }
}
