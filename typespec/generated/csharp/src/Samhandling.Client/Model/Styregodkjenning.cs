// <auto-generated>
/*
 * (title)
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Samhandling.Client.Samhandling.Client;

namespace Samhandling.Client.Model
{
    /// <summary>
    /// Styregodkjenning
    /// </summary>
    public partial class Styregodkjenning : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Styregodkjenning" /> class.
        /// </summary>
        /// <param name="handteresAvForretningsforer">handteresAvForretningsforer</param>
        /// <param name="initiertDato">initiertDato</param>
        /// <param name="meldefrist">meldefrist</param>
        [JsonConstructor]
        public Styregodkjenning(bool handteresAvForretningsforer, Option<string?> initiertDato = default, Option<string?> meldefrist = default)
        {
            HandteresAvForretningsforer = handteresAvForretningsforer;
            InitiertDatoOption = initiertDato;
            MeldefristOption = meldefrist;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets HandteresAvForretningsforer
        /// </summary>
        [JsonPropertyName("handteresAvForretningsforer")]
        public bool HandteresAvForretningsforer { get; set; }

        /// <summary>
        /// Used to track the state of InitiertDato
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> InitiertDatoOption { get; private set; }

        /// <summary>
        /// Gets or Sets InitiertDato
        /// </summary>
        [JsonPropertyName("initiertDato")]
        public string? InitiertDato { get { return this.InitiertDatoOption; } set { this.InitiertDatoOption = new(value); } }

        /// <summary>
        /// Used to track the state of Meldefrist
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MeldefristOption { get; private set; }

        /// <summary>
        /// Gets or Sets Meldefrist
        /// </summary>
        [JsonPropertyName("meldefrist")]
        public string? Meldefrist { get { return this.MeldefristOption; } set { this.MeldefristOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Styregodkjenning {\n");
            sb.Append("  HandteresAvForretningsforer: ").Append(HandteresAvForretningsforer).Append("\n");
            sb.Append("  InitiertDato: ").Append(InitiertDato).Append("\n");
            sb.Append("  Meldefrist: ").Append(Meldefrist).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            if (this.InitiertDatoOption.Value != null) {
                // InitiertDato (string) pattern
                Regex regexInitiertDato = new Regex(@"^[0-9]{4}-[0-9]{2}-[0-9]{2}$", RegexOptions.CultureInvariant);

                if (this.InitiertDatoOption.Value != null &&!regexInitiertDato.Match(this.InitiertDatoOption.Value).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for InitiertDato, must match a pattern of " + regexInitiertDato, new [] { "InitiertDato" });
                }
            }

            if (this.MeldefristOption.Value != null) {
                // Meldefrist (string) pattern
                Regex regexMeldefrist = new Regex(@"^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(Z|[+-][0-9]{2}:[0-9]{2})$", RegexOptions.CultureInvariant);

                if (this.MeldefristOption.Value != null &&!regexMeldefrist.Match(this.MeldefristOption.Value).Success)
                {
                    yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Meldefrist, must match a pattern of " + regexMeldefrist, new [] { "Meldefrist" });
                }
            }

            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="Styregodkjenning" />
    /// </summary>
    public class StyregodkjenningJsonConverter : JsonConverter<Styregodkjenning>
    {
        /// <summary>
        /// Deserializes json to <see cref="Styregodkjenning" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override Styregodkjenning Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> handteresAvForretningsforer = default;
            Option<string?> initiertDato = default;
            Option<string?> meldefrist = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "handteresAvForretningsforer":
                            handteresAvForretningsforer = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "initiertDato":
                            initiertDato = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "meldefrist":
                            meldefrist = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!handteresAvForretningsforer.IsSet)
                throw new ArgumentException("Property is required for class Styregodkjenning.", nameof(handteresAvForretningsforer));

            if (handteresAvForretningsforer.IsSet && handteresAvForretningsforer.Value == null)
                throw new ArgumentNullException(nameof(handteresAvForretningsforer), "Property is not nullable for class Styregodkjenning.");

            if (initiertDato.IsSet && initiertDato.Value == null)
                throw new ArgumentNullException(nameof(initiertDato), "Property is not nullable for class Styregodkjenning.");

            if (meldefrist.IsSet && meldefrist.Value == null)
                throw new ArgumentNullException(nameof(meldefrist), "Property is not nullable for class Styregodkjenning.");

            return new Styregodkjenning(handteresAvForretningsforer.Value!.Value!, initiertDato, meldefrist);
        }

        /// <summary>
        /// Serializes a <see cref="Styregodkjenning" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="styregodkjenning"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, Styregodkjenning styregodkjenning, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, styregodkjenning, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="Styregodkjenning" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="styregodkjenning"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, Styregodkjenning styregodkjenning, JsonSerializerOptions jsonSerializerOptions)
        {
            if (styregodkjenning.InitiertDatoOption.IsSet && styregodkjenning.InitiertDato == null)
                throw new ArgumentNullException(nameof(styregodkjenning.InitiertDato), "Property is required for class Styregodkjenning.");

            if (styregodkjenning.MeldefristOption.IsSet && styregodkjenning.Meldefrist == null)
                throw new ArgumentNullException(nameof(styregodkjenning.Meldefrist), "Property is required for class Styregodkjenning.");

            writer.WriteBoolean("handteresAvForretningsforer", styregodkjenning.HandteresAvForretningsforer);

            if (styregodkjenning.InitiertDatoOption.IsSet)
                writer.WriteString("initiertDato", styregodkjenning.InitiertDato);

            if (styregodkjenning.MeldefristOption.IsSet)
                writer.WriteString("meldefrist", styregodkjenning.Meldefrist);
        }
    }
}
